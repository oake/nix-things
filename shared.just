# generate a keypair, rekey all secrets
[group('deployment')]
@bootstrap host: _add
  echo "Loading the bootstrap script..."
  nix run .#bootstrap-{{host}}

# install with nixos-anywhere or LXC in PVE
[group('deployment')]
@install host build="local": _add
  if [[ "{{host}}" == lxc-* ]]; then \
    just _install-lxc {{host}}; \
  else \
    just _install-anywhere {{host}} {{build}}; \
  fi

@_install-lxc host:
  echo "Loading the install script..."
  nix run .#install-{{host}}

@_install-anywhere host build:
  test -d .bootstrap/extra && [ "$(ls -A .bootstrap/extra)" ] \
    || { echo "Can't find the keypair. Did you bootstrap?"; exit 1; }

  nix run nixos-anywhere -- \
        --extra-files '.bootstrap/extra' \
        --build-on '{{build}}' \
        --flake '.#{{host}}' \
        root@{{host}}.{{landomain}}

# use deploy-rs to update an existing host
[group('deployment')]
deploy host build='auto': _add
  #!/usr/bin/env sh
  set -euo pipefail
  DEPLOY_ARG=--remote-build
  case "{{build}}" in
    local)  DEPLOY_ARG= ;;
    remote) ;;
    *)      case "{{host}}" in lxc-*) DEPLOY_ARG= ;; esac ;;
  esac
  nix run nixpkgs#deploy-rs -- .#{{host}} -s ${DEPLOY_ARG}

# create/edit agenix secret
[group('secrets')]
@secret secret: _add && rekey
  nix run github:oddlama/agenix-rekey -- edit ./secrets/secrets/{{secret}}.age

# rekey all agenix secrets
[group('secrets')]
@rekey: _add
  nix run github:oddlama/agenix-rekey -- rekey -a

# navigate config tree
[group('tools')]
@inspect:
  nix run nixpkgs#nix-inspect -- -p .

@_add:
    git add --all
